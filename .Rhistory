memofit(data=smc,db = db, f=mem_hgbd)
library(gdigest)
memofit(data=smc,db = db, f=mem_hgbd)
library(gdigest)
memofit(data=smc,db = db, f=mem_hgbd)
library(gdigest)
db <- memoise::cache_filesystem("~/projects/gdigest/.rcache")
smc <- hbgd::get_smocc_data()[1:2000,]
mem_hgbd <- memoise::memoise(function(...){
on.exit({
assign(digest::digest(list(...)),list(...),envir = sys.frame(-1))
},add = TRUE)
hbgd::get_fit(...)
}, cache = db)
memofit(data=smc,db = db, f=mem_hgbd)
library(memoise)
memofit(data=smc,db = db, f=mem_hgbd)
library(hbgd)
memofit(data=smc,db = db, f=mem_hgbd)
readRDS('.rcache/_c6d9f2825a7d282a')
readRDS('.rcache/d7dfdd7e0812646a')
x <- readRDS('.rcache/_c6d9f2825a7d282a')
View(x)
memofit(data=smc,db = db, f=mem_hgbd)
memofit(data=smc,db = db, f=mem_hgbd)
x <- readRDS('.rcache/_88600535ded2397e')
View(x)
readRDS('.rcache/88600535ded2397e')
readRDS('.rcache/88600535ded2397e')$value
y <- readRDS('.rcache/88600535ded2397e')$value
?memofit
library(gdigest)
vcs::grepr('db\\$path','R')
vcs::grepr('path','R')
db_path <- "~/projects/gdigest/.rcache"
db <- memoise::cache_filesystem(db$path)
db <- memoise::cache_filesystem(db_path)
db$path <- db_path
db
db_path <- "~/projects/gdigest/.rcache1"
db <- memoise::cache_filesystem(db_path)
db$path <- db_path
myfun <- function(...){
mem_lm <- memoise::memoise(function(...){
on.exit({
assign(digest::digest(list(...)),list(...),envir = sys.frame(-1))
},add = TRUE)
lm(...)
}, cache = db)
list.files(db$path)
}
?lm
ctl <- c(4.17,5.58,5.18,6.11,4.50,4.61,5.17,4.53,5.33,5.14)
trt <- c(4.81,4.17,4.41,3.59,5.87,3.83,6.03,4.89,4.32,4.69)
group <- gl(2, 10, 20, labels = c("Ctl","Trt"))
weight <- c(ctl, trt)
myfun(weight ~ group)
myfun(weight ~ group)
list.files('.rcache1/')
list.files('.rcache/')
myfun <- function(...){
mem_lm <- memoise::memoise(function(...){
on.exit({
assign(digest::digest(list(...)),list(...),envir = sys.frame(-1))
},add = TRUE)
lm(...)
}, cache = db)
mem_lm(...)
list.files(db$path)
}
myfun(weight ~ group)
myfun(weight ~ group)
myfun(weight ~ group)
library(gdigest)
myfun(weight ~ group)
myfun(weight ~ group)
library(shiny)
server <- function(input, output) {
output$distPlot <- renderPlot({
hist(rnorm(input$obs), col = 'darkgray', border = 'white')
})
}
ui <- fluidPage(
sidebarLayout(
sidebarPanel(
sliderInput("obs", "Number of observations:", min = 10, max = 500, value = 100)
),
mainPanel(plotOutput("distPlot"))
)
)
shinyApp(ui = ui, server = server)
unlink('.rcache1/')
unlink('.rcache1/',recursive = TRUE,force = TRUE)
db_path <- "~/projects/gdigest/.rcache"
db <- memoise::cache_filesystem(db_path)
db$path <- db_path
smc <- hbgd::get_smocc_data()[1:2000,]
mem_hgbd <- memoise::memoise(function(...){
on.exit({
assign(digest::digest(list(...)),list(...),envir = sys.frame(-1))
},add = TRUE)
hbgd::get_fit(...)
}, cache = db)
x <- mem_hgbd(data=smc,db = db, f=mem_hgbd)
x <- mem_hgbd(dat=smc,db = db, f=mem_hgbd)
list.files('.rcache')
x <- mem_hgbd(dat=smc,db = db, f=mem_hgbd)
list.files('.rcache')
db_path <- "~/projects/gdigest/.rcache1"
db <- memoise::cache_filesystem(db_path)
db$path <- db_path
smc <- hbgd::get_smocc_data()[1:2000,]
mem_hgbd <- memoise::memoise(function(...){
on.exit({
assign(digest::digest(list(...)),list(...),envir = sys.frame(-1))
},add = TRUE)
hbgd::get_fit(...)
}, cache = db)
x <- mem_hgbd(dat=smc,db = db, f=mem_hgbd)
list.files('.rcache1')
x <- mem_hgbd(dat=smc,db = db, f=mem_hgbd)
list.files('.rcache1')
x <- mem_hgbd(dat=smc,db = db, f=mem_hgbd)
list.files('.rcache1')
x <- mem_hgbd(dat=smc,db = db, f=mem_hgbd)
list.files('.rcache1')
db$reset()
list.files('.rcache1')
x <- mem_hgbd(dat=smc,db = db, f=mem_hgbd)
list.files('.rcache1')
x <- mem_hgbd(dat=smc,db = db, f=mem_hgbd)
list.files('.rcache1')
x <- mem_hgbd(dat=smc,db = db, f=mem_hgbd)
list.files('.rcache1')
x <- mem_hgbd(dat=smc,db = db, f=mem_hgbd)
memoise_wrapper(f=mem_hgbd,db=db, dat = smc, y_var = 'haz', method='brokenstick')
library(gdigest)
memoise_wrapper(f=mem_hgbd,db=db, dat = smc, y_var = 'haz', method='brokenstick')
list.files('.rcache1')
db$reset()
list.files('.rcache1')
memoise_wrapper(f=mem_hgbd,db=db, dat = smc, y_var = 'haz', method='brokenstick')
list.files('.rcache1')
memoise_wrapper(f=mem_hgbd,db=db, dat = smc, y_var = 'haz', method='brokenstick')
list.files('.rcache1')
memoise_wrapper(f=mem_hgbd,db=db, dat = smc, y_var = 'haz', method='brokenstick')
list.files('.rcache1')
mem_hgbd <- memoise::memoise(function(...){
on.exit({
assign(digest::digest(list(...)),list(...),envir = sys.frame(-1))
},add = TRUE)
hbgd::get_fit(...)
}, cache = db)
memoise_wrapper(f=mem_hgbd,db=db, dat = smc, y_var = 'haz', method='brokenstick')
list.files('.rcache1')
rm(mem_hgbd)
mem_hgbd <- memoise::memoise(function(...){
on.exit({
assign(digest::digest(list(...)),list(...),envir = sys.frame(-1))
},add = TRUE)
hbgd::get_fit(...)
}, cache = db)
memoise_wrapper(f=mem_hgbd,db=db, dat = smc, y_var = 'haz', method='brokenstick')
list.files('.rcache1')
mem_hgbd(dat=smc,db = db, f=mem_hgbd)
list.files('.rcache1')
memoise_wrapper(f=mem_hgbd,db=db, dat = smc, y_var = 'haz', method='brokenstick')
list.files('.rcache1')
db$reset()
mem_hgbd(f=mem_hgbd, db = db, dat=smc, y_var = 'haz', method='brokenstick')
list.files('.rcache1')
memoise_wrapper(f=mem_hgbd,db=db, dat = smc, y_var = 'haz', method='brokenstick')
list.files('.rcache1')
memoise_wrapper(f=mem_hgbd,db=db, dat = smc, y_var = 'haz', method='brokenstick')
list.files('.rcache1')
db$reset()
mem_hgbd(dat=smc, y_var = 'haz', method='brokenstick')
list.files('.rcache1')
memoise_wrapper(f=mem_hgbd,db=db, dat = smc, y_var = 'haz', method='brokenstick')
list.files('.rcache1')
list.files('.rcache1')
memoise_wrapper(f=mem_hgbd,db=db, dat = smc, y_var = 'haz', method='brokenstick')
list.files('.rcache1')
db$reset()
memoise_wrapper(f=mem_hgbd,db=db, dat = smc, y_var = 'haz', method='brokenstick')
list.files('.rcache1')
mem_hgbd(dat=smc, y_var = 'haz', method='brokenstick')
rm(list=ls())
db_path <- "~/projects/gdigest/.rcache1"
db <- memoise::cache_filesystem(db_path)
db$path <- db_path
smc <- hbgd::get_smocc_data()[1:2000,]
mem_hgbd <- memoise::memoise(function(...){
on.exit({
assign(digest::digest(list(...)),list(...),envir = sys.frame(-1))
},add = TRUE)
hbgd::get_fit(...)
}, cache = db)
mem_hgbd(dat=smc, y_var = 'haz', method='brokenstick')
db$reset()
mem_hgbd(dat=smc, y_var = 'haz', method='brokenstick')
list.files('.rcache1')
memoise_wrapper(f=mem_hgbd,db=db, dat = smc, y_var = 'haz', method='brokenstick')
list.files('.rcache1')
db$reset()
list.files(db_path)
memoise_wrapper(f=mem_hgbd,db=db, dat = smc, y_var = 'haz', method='brokenstick')
list.files(db_path)
unlink(db_path)
unlink(db_path,recursive = TRUE,force = TRUE)
list.files(db_path)
list.dirs('.')
list.dirs('.',recursive = FALSE)
db_path <- "~/projects/gdigest/.rcache"
db <- memoise::cache_filesystem(db_path)
db$path <- db_path
memofit(data=smc,db = db, f=mem_hgbd)
library(gdigest)
memofit(data=smc,db = db, f=mem_hgbd)
db_path <- "~/projects/gdigest/.rcache"
db <- memoise::cache_filesystem(db_path)
db$path <- db_path
list.files(db_path)
db$reset()
file.create('.rcache/README.md')
file.create('/.rcache/README.md')
list.dirs('.',recursive = TRUE)
list.dirs('.',recursive = FALSE)
db_path <- "~/projects/gdigest/.rcache"
db <- memoise::cache_filesystem(db_path)
list.dirs('.',recursive = FALSE)
file.create('.rcache/README.md')
sinew::makeImport(list.files('R',full.names = TRUE),format = 'description')
vcs::grepr('dplyr::','R')
vcs::grepr('load_dictionary','R')
vcs::grepr('digest','R')
vcs::grepr('digest_d','R')
sinew::makeImport(list.files('R',full.names = TRUE),format = 'description')
vcs::grepr('plyr::','R')
library(gdigest)
library(gdigest)
list.files(db_path)
memofit(data=smc,db = db, f=mem_hgbd)
library(gdigest)
memofit(data=smc,db = db, f=mem_hgbd)
sel_file=NULL
library(gdigest)
memofit(data=smc,db = db, f=mem_hgbd)
memofit(data=smc,db = db, f=mem_hgbd)
library(gdigest)
memofit(data=smc,db = db, f=mem_hgbd)
library(gdigest)
memofit(data=smc,db = db, f=mem_hgbd)
library(gdigest)
split(c(1,2,3),letters[1:3])
split(LETTERS[1:3],letters[1:3])
list(a='A',b='B')
split(LETTERS[1:2],letters[1:2])
library(gdigest)
memofit(data=smc,db = db, f=mem_hgbd)
library(gdigest)
memofit(data=smc,db = db, f=mem_hgbd)
library(gdigest)
memofit(data=smc,db = db, f=mem_hgbd)
library(gdigest)
memofit(data=smc,db = db, f=mem_hgbd)
db
db$path
library(gdigest)
memofit(data=smc,db = db, f=mem_hgbd)
list.files('.rcache',pattern = '^_')
length(list.files('.rcache',pattern = '^_'))
?selectInput
sinew:::interOxyAddIn()
library(gdigest)
memofit(data=smc,db = db, f=mem_hgbd)
library(gdigest)
memofit(data=smc,db = db, f=mem_hgbd)
library(gdigest)
memofit(data=smc,db = db, f=mem_hgbd)
db_path <- "~/projects/gdigest/.rcache"
db <- memoise::cache_filesystem(db_path)
db$path <- db_path
smc <- hbgd::get_smocc_data()[1:2000,]
mem_hgbd <- memoise::memoise(function(...){
on.exit({
assign(digest::digest(list(...)),list(...),envir = sys.frame(-1))
},add = TRUE)
hbgd::get_fit(...)
}, cache = db)
db$reset()
memofit(data=smc,db = db, f=mem_hgbd)
row.names(installed.packages())
library(gdigest)
memofit(data=smc,db = db, f=mem_hgbd)
memofit(data=smc,db = db, f=mem_hgbd)
library(gdigest)
memofit(data=smc,db = db, f=mem_hgbd)
fit_traj1 <- map_df(fit_traj)
fit_traj1 <- purrr::map_df(fit_traj)
fit_traj1 <- purrr::map_df(fit_traj,.f=function(x) x$xy,.id='subjid')
fit_traj1
library(gdigest)
library(gdigest)
memofit(data=smc,db = db, f=mem_hgbd)
memofit(data=smc,db = db, f=mem_hgbd)
memofit(data=smc,db = db, f=mem_hgbd)
readRDS('.rcache/_68fb81dd6a7624de')
list.files('.rcache')
saveRDS(mem_hgbd,file='inst/mem_hbgd.rda')
devtools::use_data(mem_hgbd)
library(gdigest)
rm(mem_hgbd)
memoise_wrapper(f=mem_hgbd,db=db, dat = smc, y_var = 'haz', method='brokenstick')
memoise_wrapper(f=mem_hgbd,db=db, dat = smc, y_var = 'haz', method='brokenstick')
?memoise
init_mem <- function(f,db,fname='memf'){
fout <- memoise::memoise(function(...){
on.exit({
assign(digest::digest(list(...)),list(...),envir = sys.frame(-1))
},add = TRUE)
hbgd::get_fit(...)
}, cache = db)
assign(fname,value = fout,envir = sys.frame(-1))
}
init_mem <- function(f,db,fname='memf'){
fout <- memoise::memoise(function(...){
on.exit({
assign(digest::digest(list(...)),list(...),envir = sys.frame(-1))
},add = TRUE)
f(...)
}, cache = db)
assign(fname,value = fout,envir = sys.frame(-1))
}
init_mem(f = hbgd::get_fit,db = db,fname = 'mem_hgbd')
mem_hgbd
mem_hgbd(dat=smc, y_var = 'haz', method='brokenstick')
db_path <- "~/projects/gdigest/.rcache"
db <- memoise::cache_filesystem(db_path)
db$path <- db_path
smc <- hbgd::get_smocc_data()[1:2000,]
init_mem <- function(f,db,fname='memf'){
fout <- memoise::memoise(function(...){
on.exit({
assign(digest::digest(list(...)),list(...),envir = sys.frame(-1))
},add = TRUE)
f(...)
}, cache = db)
assign(fname,value = fout,envir = sys.frame(-1))
}
init_mem(f = hbgd::get_fit,db = db,fname = 'mem_hgbd')
mem_hgbd(dat=smc, y_var = 'haz', method='brokenstick')
mem_hgbd(dat=smc, y_var = 'haz', method='brokenstick')
rm(mem_hgbd)
init_mem(f = hbgd::get_fit,db = db,fname = 'mem_hgbd')
mem_hgbd(dat=smc, y_var = 'haz', method='brokenstick')
db$reset()
formals(hbgd::get_fit)
body(hbgd::get_fit)
init_mem <- function(f,db,fname='mem_f'){
fout <- memoise::memoise(function(...){
on.exit({
assign(digest::digest(list(...)),list(...),envir = sys.frame(-1))
},add = TRUE)
f(...)
}, cache = db)
assign(fname,value = fout,envir = sys.frame(-1))
}
init_mem(f = hbgd::get_fit,db = db,fname = 'mem_hgbd')
db$reset()
mem_hgbd(dat=smc, y_var = 'haz', method='brokenstick')
list.files(db_path)
mem_hgbd(dat=smc, y_var = 'haz', method='brokenstick')
list.files(db_path)
db_path <- "~/projects/gdigest/.rcache"
db <- memoise::cache_filesystem(db_path)
db$path <- db_path
smc <- hbgd::get_smocc_data()[1:2000,]
init_mem <- function(f,db,fname='mem_f'){
fout <- memoise::memoise(function(...){
on.exit({
assign(digest::digest(list(...)),list(...),envir = sys.frame(-1))
},add = TRUE)
f(...)
}, cache = db)
assign(fname,value = fout,envir = sys.frame(-1))
}
list.files(db_path)
init_mem(f = hbgd::get_fit,db = db,fname = 'mem_hgbd')
mem_hgbd(dat=smc, y_var = 'haz', method='brokenstick')
init_mem <- function(f,cache=cache_memory(),fname='mem_f'){
fout <- memoise::memoise(function(...){
on.exit({
assign(digest::digest(list(...)),list(...),envir = sys.frame(-1))
},add = TRUE)
f(...)
}, cache = cache)
assign(fname,value = fout,envir = sys.frame(-1))
}
rm(list=ls())
db_path <- "~/projects/gdigest/.rcache"
db <- memoise::cache_filesystem(db_path)
db$path <- db_path
smc <- hbgd::get_smocc_data()[1:2000,]
init_mem(f = hbgd::get_fit,cache = db,fname = 'mem_hgbd')
library(gdigest)
db_path <- "~/projects/gdigest/.rcache"
db <- memoise::cache_filesystem(db_path)
db$path <- db_path
smc <- hbgd::get_smocc_data()[1:2000,]
init_mem(f = hbgd::get_fit,cache = db,fname = 'mem_hgbd')
db$reset()
mem_hgbd(dat=smc, y_var = 'haz', method='brokenstick')
list.files(db_path)
memoise_wrapper(f=mem_hgbd,db=db, dat = smc, y_var = 'haz', method='brokenstick')
db$reset()
memoise_wrapper(f=mem_hgbd,db=db, dat = smc, y_var = 'haz', method='brokenstick')
list.files(db_path)
synch_remote(list.files(db_path))
synch_remote(list.files(db_path,full.names = TRUE),action = 'push')
normalizePath('.rcache')
?synch_remote()
library(gdigest)
git2r::clone
library(gdigest)
db_path <- normalizePath('.rcache')
db <- memoise::cache_filesystem(db_path)
db$path <- db_path
smc <- hbgd::get_smocc_data()[1:2000,]
synch_remote(list.files(db_path,full.names = TRUE),action = 'pull')
init_mem(f = hbgd::get_fit,cache = db,fname = 'mem_hgbd')
mem_hgbd
memoise_wrapper(f=mem_hgbd,db=db, dat = smc, y_var = 'haz', method='brokenstick')
list.files('.rcache')
memoise_wrapper(f=mem_hgbd,db=db, dat = smc, y_var = 'haz', method='brokenstick')
x <- memoise_wrapper(f=mem_hgbd,db=db, dat = smc, y_var = 'haz', method='brokenstick')
synch_remote(list.files(db_path,full.names = TRUE),action = 'push')
memofit(data=smc,db = db, f=mem_hgbd)
memofit(data=smc,db = db, f=mem_hgbd)
library(gdigest)
db_path <- normalizePath('.rcache')
db <- memoise::cache_filesystem(db_path)
#add the path to the cache function
db$path <- db_path
#set the data
smc <- hbgd::get_smocc_data()[1:2000,]
init_mem(f = hbgd::get_fit,cache = db,fname = 'mem_hgbd')
memofit(data=smc,db = db, f=mem_hgbd)
FILES <- list.files('.rcache',pattern = '^_')
FILES
sapply(FILES,readRDS)
sapply(file.path(db$path,FILES()),readRDS)
sapply(file.path(db$path,FILES),readRDS)
sapply(file.path(db$path,FILES),function(x) readRDS(x)[c('y_var','method')])
sapply(file.path(db$path,FILES),function(x) readRDS(x)[c('y_var','method')],simplify = FALSE)
sapply(FILES,function(x) readRDS(file.path(db$path,x))[c('y_var','method')])
sapply(FILES,function(x) t(readRDS(file.path(db$path,x))[c('y_var','method')]))
t(sapply(FILES,function(x) readRDS(file.path(db$path,x))[c('y_var','method')]))
t(sapply(FILES,function(x) readRDS(file.path(db$path,x))[c('y_var','method')]))
library(gdigest)
library(gdigest)
memofit(data=smc,db = db, f=mem_hgbd)
preruns <- t(sapply(FILES,function(x) readRDS(file.path(db$path,x))[c('y_var','method')]))
preruns
with(preruns,y_var=='haz')
preruns[preruns$y_var=='haz',]
preruns
do.call('rbind',preruns)
as.data.frame(preruns)
with(as.data.frame(preruns),y_var=='haz')
preruns <- as.data.frame(t(sapply(FILES,function(x) readRDS(file.path(db$path,x))[c('y_var','method')])))
library(gdigest)
library(gdigest)
memofit(data=smc,db = db, f=mem_hgbd)
library(gdigest)
library(gdigest)
memofit(data=smc,db = db, f=mem_hgbd)
library(gdigest)
memofit(data=smc,db = db, f=mem_hgbd)
library(gdigest)
memofit(data=smc,db = db, f=mem_hgbd)
library(gdigest)
memofit(data=smc,db = db, f=mem_hgbd)
library(gdigest)
memofit(data=smc,db = db, f=mem_hgbd)
library(gdigest)
memofit(data=smc,db = db, f=mem_hgbd)
memofit(data=smc,db = db, f=mem_hgbd)
library(gdigest)
memofit(data=smc,db = db, f=mem_hgbd)
library(gdigest)
memofit(data=smc,db = db, f=mem_hgbd)
memofit(data=smc,db = db, f=mem_hgbd)
library(gdigest)
memofit(data=smc,db = db, f=mem_hgbd)
library(gdigest)
memofit(data=smc,db = db, f=mem_hgbd)
memofit(data=smc,db = db, f=mem_hgbd)
memofit(data=smc,db = db, f=mem_hgbd)
memofit(data=smc,db = db, f=mem_hgbd)
library(gdigest)
db_path <- normalizePath('.rcache')
db <- memoise::cache_filesystem(db_path)
#add the path to the cache function
db$path <- db_path
#set the data
smc <- hbgd::get_smocc_data()[1:2000,]
init_mem(f = hbgd::get_fit,cache = db,fname = 'mem_hgbd')
memofit(data=smc,db = db, f=mem_hgbd)
memofit(data=smc,db = db, f=mem_hgbd)
memofit(data=smc,db = db, f=mem_hgbd)
uri_git
